import java.util.regex.Pattern;

public class EmailValidator {

    // Username regex: allows alphanumeric and special characters, but no leading/trailing dots, no consecutive periods or special characters
    private static final String USERNAME_REGEX = "^[a-zA-Z0-9]+([.!#$%&'*+/=?^_`{|}-][a-zA-Z0-9]+)*$";
    
    // Domain regex: allows alphanumeric, period and hyphen, no consecutive periods/hyphens, no leading/trailing periods/hyphens
    private static final String DOMAIN_REGEX = "^[a-zA-Z0-9]+([-a-zA-Z0-9]*[a-zA-Z0-9])*(\\.[a-zA-Z]{2,})$";

    // Custom error message for restricted words
    private static final String ERROR_SPECIAL_STRING = "We are unable to accept an email address containing 'FXCM'/'fuhui'. Please provide a different email address.";

    // Function to validate the email address based on requirements
    public static String validateEmail(String email) {
        // Check for forbidden substrings "fuhui" or "FXCM"
        if (email.toLowerCase().contains("fuhui") || email.toUpperCase().contains("FXCM")) {
            return ERROR_SPECIAL_STRING;
        }

        // Split email into local part (username) and domain part
        String[] parts = email.split("@");
        if (parts.length != 2) {
            return "Invalid email: must contain exactly one '@'";
        }

        String username = parts[0];
        String domain = parts[1];

        // Validate username and domain separately
        if (!Pattern.matches(USERNAME_REGEX, username)) {
            return "Invalid email: username doesn't meet requirements";
        }

        if (!Pattern.matches(DOMAIN_REGEX, domain)) {
            return "Invalid email: domain doesn't meet requirements";
        }

        // If both username and domain are valid
        return "Valid email";
    }

    public static void main(String[] args) {
        // Test cases
        String[] emails = {
            "valid.email@example.com",           // valid email
            "invalid..email@example.com",        // invalid: consecutive periods in username
            "user@domain..com",                  // invalid: consecutive periods in domain
            "invalid@fuhui.com",                 // invalid: contains "fuhui"
            "user@domain-.com",                  // invalid: domain ends with hyphen
            "user@domain.com",                   // valid email
            "FXCM_user@domain.com",              // invalid: contains "FXCM"
            "user_name+tag@example.com",         // valid email with special characters
            "user--name@example.com",            // invalid: consecutive special characters in username
            "user@sub-domain.com",               // valid email with hyphen and period in domain
            "user@domain..com"                   // invalid: consecutive period in domain
        };

        for (String email : emails) {
            System.out.println("Email: " + email + " -> " + validateEmail(email));
        }
    }
}
